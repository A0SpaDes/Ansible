broker.id={{ groups['kafka'].index(inventory_hostname) +1 }}
broker.id.generation.enable=false
listeners=INTERNAL://:9094,EXTERNAL://:9092
max.connections= {{ kafka_max_connection }}
connections.max.idle.ms=600000
transaction.max.timeout.ms=600000
request.timeout.ms=600000
advertised.listeners=INTERNAL://{{ ansible_host }}:9094,EXTERNAL://kafka{{ groups['kafka'].index(inventory_hostname) + 1 }}.{{ domain }}:9092
auto.create.topics.enable=true
delete.topic.enable=true
background.threads=10
compression.type=producer
queued.max.requests=10000
listener.security.protocol.map=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
inter.broker.listener.name=INTERNAL
num.network.threads=3
num.io.threads=8
socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600
log.dirs={{ kafka_log_dir }}
num.partitions={{ groups['kafka'] | length }}
num.recovery.threads.per.data.dir=1
transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1
offsets.topic.replication.factor={{ groups['kafka'] | length }}
default.replication.factor=3
log.flush.interval.messages=10000
log.flush.interval.ms=1000
log.retention.hours=168
log.segment.bytes=1073741824
log.retention.check.interval.ms=300000
zookeeper.connect={% for host in groups['kafka'] %}{{ host }}:{{ zookeeper_port }}{%- if not loop.last -%},{% endif %}{% endfor %}

zookeeper.connection.timeout.ms=5000
group.initial.rebalance.delay.ms=3